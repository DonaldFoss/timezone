#!/bin/bash

if ! { ruby --version | grep -q '^ruby 1.9.3'; }
then
  echo "Zone verification tests fail without Ruby 1.9.3." >&2
fi

if [ "$TRAVIS" = "true" ]; then
  # Install a Ruby 1.9.3 for to get a `strftime` that understands `%::z`.
  (echo -e "\n\n\n" | sudo apt-add-repository ppa:brightbox/ruby-ng-experimental) >/dev/null 2>&1 && echo "brightbox added"
  sudo apt-get -q update >/dev/null 2>&1 && echo "apt-get update" 
  sudo apt-get -q install bc ruby rubygems ruby-switch >/dev/null 2>&1 && \
    echo "apt-get install bc ruby rubygems ruby-switch"
  sudo apt-get -q install ruby1.9.3 >/dev/null 2>&1 && echo "apt-get install ruby1.9.3"
  sudo update-alternatives --install /usr/bin/ruby ruby /usr/bin/ruby1.9.3 400 \
                    --slave   /usr/bin/ri ri /usr/bin/ri1.9.3 \
                    --slave   /usr/bin/irb irb /usr/bin/irb1.9.3
  sudo update-alternatives --set ruby /usr/bin/ruby1.9.3
  # Remove the RVM manged Ruby.
  rm -rf ~/.rvm
  ruby -v
  echo ""
  (cd src && ../util/sizes timezone.js rfc822.js)
  echo ""
fi

ls -la build/timezone/index.js

echo ""

(proof run t/*/*.t.* t/*/*/*.t.* | tee .proof.out | proof progress) || (proof errors < .proof.out) || exit 1

if [ "$TRAVIS" = "true" ] || [ "$MINIFY" = "true" ]; then
  default=$(cat src/timezone.js | uglifyjs | gzip -c | wc -c)
  lift=$(cat src/timezone.js | uglifyjs --lift-vars | gzip -c | wc -c)

  if [ $default -lt $lift ]; then
    cat src/timezone.js | uglifyjs > build/timezone/index.js
  else
    cat src/timezone.js | uglifyjs --lift-vars > build/timezone/index.js
  fi 
 
  ls -la build/timezone/index.js

  echo ""

  (proof run t/*/*.t.* t/locale/*/*.t.* t/zones/timezone/*.t.* | tee .proof.out | proof progress) || (proof errors < .proof.out) || exit 1
fi
